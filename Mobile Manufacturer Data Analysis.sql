--SQL Advance Case Study
Use db_SQLCaseStudies

--Schema is also created in the diagram 

SELECT * FROM DIM_CUSTOMER
SELECT * FROM DIM_LOCATION
SELECT * FROM DIM_MODEL
SELECT * FROM FACT_TRANSACTIONS
SELECT * FROM DIM_DATE
SELECT * FROM DIM_MANUFACTURER

--Q1--BEGIN 
	SELECT [STATE]
	FROM FACT_TRANSACTIONS X
	INNER JOIN DIM_LOCATION Y ON X.IDLOCATION = Y.IDLOCATION
	INNER JOIN DIM_MODEL Z ON X.IDMODEL = Z.IDMODEL
	WHERE DATE BETWEEN '01-01-2005' AND GETDATE()





--Q1--END

--Q2--BEGIN
	
	SELECT TOP 1
	STATE FROM DIM_LOCATION
	INNER JOIN FACT_TRANSACTIONS ON DIM_LOCATION.IDLocation = FACT_TRANSACTIONS.IDLocation
    INNER JOIN DIM_MODEL ON FACT_TRANSACTIONS.IDModel = DIM_MODEL.IDModel
	INNER JOIN DIM_MANUFACTURER ON DIM_MANUFACTURER.IDManufacturer = DIM_MODEL.IDManufacturer
	WHERE Manufacturer_Name = 'SAMSUNG'
	GROUP BY [STATE]
	ORDER BY SUM(QUANTITY) DESC








--Q2--END

--Q3--BEGIN      
	
	SELECT MODEL_NAME, ZIPCODE ,[STATE],
	COUNT(IDCUSTOMER) AS NO_OF_TRANSACTION
	FROM DIM_LOCATION
	INNER JOIN FACT_TRANSACTIONS ON DIM_LOCATION.IDLocation=FACT_TRANSACTIONS.IDLocation
	INNER JOIN DIM_MODEL ON FACT_TRANSACTIONS.IDModel = DIM_MODEL.IDModel
	GROUP BY Model_Name,ZIPCODE,[STATE]
	ORDER BY Model_Name,(NO_OF_TRANSACTION) DESC;







--Q3--END

--Q4--BEGIN
 
 SELECT TOP 1 
 MODEL_NAME,Unit_price FROM DIM_MODEL
 ORDER BY Unit_price






--Q4--END

--Q5--BEGIN
 
 SELECT MODEL_NAME,AVG(UNIT_PRICE) AS AVG_PRICE
 FROM DIM_MODEL
 INNER JOIN DIM_MANUFACTURER ON DIM_MANUFACTURER.IDManufacturer = DIM_MODEL.IDManufacturer
 WHERE Manufacturer_Name IN
 (
 SELECT TOP 5 Manufacturer_Name FROM FACT_TRANSACTIONS
 INNER JOIN DIM_MODEL ON FACT_TRANSACTIONS.IDModel=DIM_MODEL.IDModel
 INNER JOIN DIM_MANUFACTURER ON DIM_MANUFACTURER.IDManufacturer = DIM_MODEL.IDManufacturer
 GROUP BY Manufacturer_Name
 ORDER BY SUM(QUANTITY)
 )
 GROUP BY Model_Name
 ORDER BY AVG(Unit_price)DESC












--Q5--END

--Q6--BEGIN

SELECT CUSTOMER_NAME,AVG(TOTALPRICE) AS AVG_SPENT
FROM DIM_CUSTOMER
INNER JOIN FACT_TRANSACTIONS ON DIM_CUSTOMER.IDCustomer = FACT_TRANSACTIONS.IDCustomer
WHERE YEAR(DATE)=2009
GROUP BY Customer_Name
HAVING AVG(TOTALPRICE) > 500










--Q6--END
	
--Q7--BEGIN  

Select Top 5 idmodel,Count(Quantity) AS QUANTITY
From Fact_Transactions
Where Year(date) = 2008
Group by IDModel
Order by Count(Quantity) DESC

Select Top 5 idmodel,Count(Quantity) AS QUANTITY
From Fact_Transactions
Where Year(date) = 2009
Group by IDModel
Order by Count(Quantity) DESC

Select Top 5 idmodel, Count(Quantity) AS QUANTITY
From Fact_Transactions
Where Year(date) = 2010
Group by IDModel
Order by Count(Quantity) DESC









--Q7--END	
--Q8--BEGIN

WITH RANK1 AS 
    (
        SELECT MANUFACTURER_NAME,YEAR(DATE) AS YEAR,
        DENSE_RANK() OVER (PARTITION BY YEAR(DATE) ORDER BY SUM(TOTALPRICE)DESC) AS RANK
        FROM FACT_TRANSACTIONS ASA
        INNER JOIN DIM_MODEL AS B
        ON A.IDMODEL = B.IDModel
        INNER JOIN DIM_MANUFACTURER AS C
        ON C.IDManufacturer = B.IDManufacturer
        GROUP BY Manufacturer_Name, YEAR(DATE)
    )
    SELECT YEAR, MANUFACTURER_NAME
    FROM RANK1
    WHERE YEAR IN ('2009','2010') AND RANK='2'

















--Q8--END
--Q9--BEGIN
	
	SELECT MANUFACTURER_NAME FROM  DIM_MANUFACTURER X
	INNER JOIN DIM_MODEL Y ON X.IDManufacturer	= Y.IDManufacturer
	INNER JOIN FACT_TRANSACTIONS Z ON Z.IDModel = Y.IDModel
	WHERE YEAR(DATE) = 2010
	EXCEPT 
	SELECT MANUFACTURER_NAME FROM  DIM_MANUFACTURER X
	INNER JOIN DIM_MODEL Y ON X.IDManufacturer	= Y.IDManufacturer
	INNER JOIN FACT_TRANSACTIONS Z ON Z.IDModel = Y.IDModel
	WHERE YEAR(DATE) = 2009	















--Q9--END

--Q10--BEGIN
	--Note-Only max 50 customers i had so find out the the top 20 customers.

SELECT TOP 20 CUSTOMER_NAME, 
AVG(CASE WHEN YEAR(DATE) = 2003 THEN TOTALPRICE END) AS AVERAGE_PRICE_2003,
AVG(CASE WHEN YEAR(DATE) = 2003 THEN QUANTITY END) AS AVERAGE_QTY_2003,

AVG(CASE WHEN YEAR(DATE) = 2004 THEN TOTALPRICE END) AS AVERAGE_PRICE_2004,
AVG(CASE WHEN YEAR(DATE) = 2004 THEN QUANTITY END) AS AVERAGE_QTY_2004,

AVG(CASE WHEN YEAR(DATE) = 2005 THEN TOTALPRICE END) AS AVERAGE_PRICE_2005,
AVG(CASE WHEN YEAR(DATE) = 2005 THEN QUANTITY END) AS AVERAGE_QTY_2005,

AVG(CASE WHEN YEAR(DATE) = 2006 THEN TOTALPRICE END) AS AVERAGE_PRICE_2006,
AVG(CASE WHEN YEAR(DATE) = 2006 THEN QUANTITY END) AS AVERAGE_QTY_2006,

AVG(CASE WHEN YEAR(DATE) = 2007 THEN TOTALPRICE END) AS AVERAGE_PRICE_2007,
AVG(CASE WHEN YEAR(DATE) = 2007 THEN QUANTITY END) AS AVERAGE_QTY_2007,

AVG(CASE WHEN YEAR(DATE) = 2008 THEN TOTALPRICE END) AS AVERAGE_PRICE_2008,
AVG(CASE WHEN YEAR(DATE) = 2008 THEN QUANTITY END) AS AVERAGE_QTY_2008,

AVG(CASE WHEN YEAR(DATE) = 2009 THEN TOTALPRICE END) AS AVERAGE_PRICE_2009,
AVG(CASE WHEN YEAR(DATE) = 2009 THEN QUANTITY END) AS AVERAGE_QTY_2009,

AVG(CASE WHEN YEAR(DATE) = 2010 THEN TOTALPRICE END) AS AVERAGE_PRICE_2010,
AVG(CASE WHEN YEAR(DATE) = 2010 THEN QUANTITY END) AS AVERAGE_QTY_2010,

(AVG(CASE WHEN YEAR(DATE) = 2010 THEN TOTALPRICE END) - AVG(CASE WHEN YEAR(DATE) = 2003 THEN TOTALPRICE END)) / AVG(CASE WHEN YEAR(DATE) = 2003 THEN TOTALPRICE END) * 100 AS PERCENT_CHANGE
FROM DIM_CUSTOMER D

INNER JOIN FACT_TRANSACTIONS F ON F.IDCUSTOMER= D.IDCUSTOMER
GROUP BY CUSTOMER_NAME


















--Q10--END
	

